#------------------------------------------------------------------------------
# Copyright (c) 2013, Nucleic Development Team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file COPYING.txt, distributed with this software.
#------------------------------------------------------------------------------
class ReadHandler(object):
    """ A base class for defining expression read handlers.

    """
    __slots__ = ()

    def __call__(self, owner, name, storage):
        """ Evaluate and return the expression value.

        This method must be implemented by subclasses.

        Parameters
        ----------
        owner : Declarative
            The declarative object on which the expression should
            execute.

        name : str
            The attribute name on the declarative object for which
            the expression is providing a value.

        storage : sortedmap
            The sortedmap which contains the shared storage for
            the enamldef tree.

        """
        raise NotImplementedError


class WriteHandler(object):
    """ A base class for defining expression write handlers.

    """
    __slots__ = ()

    def __call__(self, owner, name, storage, change):
        """ Write the change to the expression.

        This method must be implemented by subclasses.

        Parameters
        ----------
        owner : Declarative
            The declarative object on which the expression should
            execute.

        name : str
            The attribute name on the declarative object for which
            the expression is providing a value.

        storage : sortedmap
            The sortedmap which contains the shared storage for
            the enamldef tree.

        change : dict
            The change dict generated by the declarative object.

        """
        raise NotImplementedError


class ExpressionEngine(object):
    """ A class which manages reading and writing bound expressions.

    """
    __slots__ = ('read_handlers', 'write_handlers')

    def __init__(self, read_handlers, write_handlers):
        """ Initialize an ExpressionEngine.

        Parameters
        ----------
        read_handlers : sortedmap
            A mapping of expression name to ReadHandler.

        write_handlers : sortedmap
            A mapping of expression name to list of WriteHandlers.

        """
        self.read_handlers = read_handlers
        self.write_handlers = write_handlers

    def read(self, name, owner, storage):
        """ Compute and return the value of an expression.

        Parameters
        ----------
        name : str
            The name of the relevant bound expression.

        owner : Declarative
            The declarative object which owns the engine.

        storage : sortedmap
            The shared storage map for the declarative.

        """
        return self.read_handlers[name](name, owner, storage)

    def write(self, name, owner, storage, change):
        """ Write a change to an expression.

        Parameters
        ----------
        name : str
            The name of the relevant bound expression.

        owner : Declarative
            The declarative object which owns the engine.

        storage : sortedmap
            The shared storage map for the declarative.

        change : dict
            The change dictionary generated by the declarative object
            which owns the engine.

        """
        self.write_handlers[name](name, owner, storage, change)
