#------------------------------------------------------------------------------
# Copyright (c) 2013, Nucleic Development Team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file COPYING.txt, distributed with this software.
#------------------------------------------------------------------------------
class ExpressionEngine(object):
    """ A class which manages reading and writing bound expressions.

    """
    __slots__ = ('storage', 'op_handler')

    def __init__(self, storage, op_handler):
        """ Initialize an ExpressionEngine.

        Parameters
        ----------
        storage : sortedmap
            The shared sorted map which is used as storage space for the
            various parts of the enamldef tree to which this engine
            belongs.

        op_handler : OpHandler
            The shared op handler for the declarative instance which
            owns this engine.

        """
        self.storage = storage
        self.op_handler = op_handler

    def read(self, name, owner):
        """ Compute and return the value of an expression.

        Parameters
        ----------
        name : str
            The name of the relevant bound expression.

        owner : Declarative
            The declarative object which owns the engine.

        """
        return self.op_handler.read(name, owner, self.storage)

    def write(self, change):
        """ Write a change to an expression.

        Parameters
        ----------
        change : dict
            The change dictionary generated by the declarative object
            which owns the engine.

        """
        self.op_handler.write(change, self.storage)
