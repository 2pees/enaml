#------------------------------------------------------------------------------
# Copyright (c) 2013, Nucleic Development Team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file COPYING.txt, distributed with this software.
#------------------------------------------------------------------------------
from enaml.core.api import Include
from enaml.layout.api import vbox, hbox, align
from enaml.widgets.api import (
    Container, Label, Field, Scintilla, Timer, MdiArea, MdiWindow, SpinBox,
    MultilineField, PushButton
)

from .live_editor_model import LiveEditorModel

class Foo(object):
    def __init__(self):
        pass
THEME = """
{
    "settings": {
        "color": "#F8F8F8",
        "paper": "#141414",
        "font": "13pt Consolas",
        "caret": "#A7A7A7"
    },
    "enaml": {
        "class_name": {
            "color": "#9B703F"
        },
        "comment": {
            "color": "#5F5A60",
            "font": "italic 13pt Consolas"
        },
        "comment_block": {
            "color": "#5F5A60",
            "font": "italic 13pt Consolas"
        },
        "decorator": {
            "color": "#DAD085"
        },
        "double_quoted_string": {
            "color": "#8F9D6A"
        },
        "function_method_name": {
            "color": "#DAD085"
        },
        "highlighted_identifier": {
            "color": "#7587A6"
        },
        "keyword": {
            "color": "#CDA869"
        },
        "number": {
            "color": "#CF6A4C"
        },
        "operator": {
            "color": "#CDA869"
        },
        "unclosed_string": {
            "color": "#8F9D6A",
            "paper": "#2D2D2D"
        },
        "single_quoted_string": {
            "color": "#8F9D6A"
        },
        "triple_double_quoted_string": {
            "color": "#8F9D6A"
        },
        "triple_single_quoted_string": {
            "color": "#8F9D6A"
        }
    }
}
"""


enamldef LiveEditorPanel(Container):
    attr model: LiveEditorModel
    constraints = [
        vbox(hbox(label, field, slabel, spin), editor),
        align('v_center', label, field, slabel, spin),
    ]
    Label: label:
        text = 'View Item'
    Field: field:
        text << model.view_item
        text :: model.view_item = str(text)
    Label: slabel:
        text = 'Zoom'
    SpinBox: spin:
        minimum = -10
        maximum = 20
        value := editor.zoom
    PushButton:
        clicked :: editor.theme = ''
    Scintilla: editor:
        activated :: set_text(model.input_text)
        syntax = 'enaml'
        theme = THEME
        text_changed :: timer.start()
        Timer: timer:
            interval = 350
            single_shot = True
            timeout :: model.input_text = str(editor.get_text())


enamldef LiveTracebackPanel(Container):
    attr model: LiveEditorModel
    padding = 0
    MultilineField:
        text << model.traceback
        read_only = True


def prepare_item(item):
    if item is None:
        return []
    if isinstance(item, Container):
        item.share_layout = True
    return [item]


enamldef LiveViewPanel(Container):
    attr model: LiveEditorModel
    padding = 0
    MdiArea:
        resist_width = 'ignore'
        resist_height = 'ignore'
        constraints = [width >= 640, height >= 480]
        MdiWindow:
            title << model.view_item
            Container:
                padding = 0
                Include:
                    objects << prepare_item(model.output_item)
