#------------------------------------------------------------------------------
# Copyright (c) 2013, Nucleic Development Team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file COPYING.txt, distributed with this software.
#------------------------------------------------------------------------------
from enaml.layout.api import HSplitLayout, InsertItem
from enaml.widgets.api import Container, DockItem, Html
from enaml.workbench.api import Extension, PluginManifest
from enaml.workbench.core.api import Command
from enaml.workbench.ui.api import ActionItem, MenuItem


print 'Imported Persistent View!'


enamldef Pane(DockItem): item:
    closable = False
    Container:
        Html:
            source = '<h1><center>%s</center></h1>' % item.title


def new_item(event):
    """ The handler for the 'sample.persistent.new_item' command.

    """
    ui = event.workbench.get_plugin('enaml.workbench.ui')
    area = ui.workspace.content.find('the_dock_area')
    count = len(area.dock_items())
    name = '_pane_%d' % count
    title = 'Pane %d' % count
    item = Pane(area, name=name, title=title)
    area.update_layout(InsertItem(item=item.name))


def destroy_items(event):
    """ The handler for the 'sample.persistent.destroy_items' command.

    """
    ui = event.workbench.get_plugin('enaml.workbench.ui')
    area = ui.workspace.content.find('the_dock_area')
    for item in area.dock_items():
        item.destroy()


enamldef PersistentManifest(PluginManifest):
    """ The manifest which is registered when the view is loaded.

    This manifest contributes extra menu items to the menu bar and
    new commands for manipulating the dock area items.

    """
    id = 'sample.persistent'
    Extension:
        id = 'commands'
        point = 'enaml.workbench.core.commands'
        Command:
            id = 'sample.persistent.new_item'
            handler = new_item
        Command:
            id = 'sample.persistent.destroy_items'
            handler = destroy_items
    Extension:
        id = 'actions'
        point = 'enaml.workbench.ui.actions'
        MenuItem:
            path = '/debug'
            label = 'Debug'
            after = 'file'
        MenuItem:
            path = '/options'
            label = 'Options'
        MenuItem:
            path = '/tools'
            label = 'Tools'
            before = 'workspace'
        ActionItem:
            path = '/debug/something'
            label = 'Something'
        ActionItem:
            path = '/options/something_else'
            label = 'Something Else'
        ActionItem:
            path = '/tools/destroy_items'
            label = 'Destroy Items'
            shortcut = 'Ctrl+X'
            command = 'sample.persistent.destroy_items'
        ActionItem:
            path = '/file/new'
            label = 'New'
            shortcut = 'Ctrl+N'
            group = 'user'
            command = 'sample.persistent.new_item'
